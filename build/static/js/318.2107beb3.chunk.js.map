{
  "version": 3,
  "file": "static/js/318.2107beb3.chunk.js",
  "mappings": "6OAKaA,EAAgB,SAACC,GAC5B,OACE,SAACC,EAAA,EAAI,CAACC,UAAU,YAAW,UACvB,0BAAI,KAAC,eAAGC,MAAO,CAACC,MAAM,MAAOC,WAAW,OAAO,UAAC,IAAEL,EAAMM,KAAK,OAAK,6BAG1E,E,kBC0DA,EA3DwB,SAACN,GAEvB,OAAsCO,EAAAA,EAAAA,WAAS,GAAM,eAA9CC,EAAW,KAAEC,EAAc,KAClC,GAAkCF,EAAAA,EAAAA,WAAS,GAAM,eAA1CG,EAAS,KAAEC,EAAY,KAE1BC,GAAMC,EAAAA,EAAAA,YAAWC,EAAAA,GAiCrB,OAEE,UAAC,WAAc,YACb,UAACb,EAAA,EAAI,CAACC,UAAU,OAAM,WAAE,SAAC,KAAI,CAACa,GAAE,wBAAmBf,EAAMgB,OAAQ,SAAC,aAChE,4BACE,iBAAMd,UAAU,QAAO,SAAEF,EAAMgB,SAC/B,SAACf,EAAA,MAAQ,CAACgB,QAAQ,MAAMf,UAAU,OAAOgB,IAAKlB,EAAMmB,SACpD,0BAAI,YAAUnB,EAAMoB,UACpB,SAACnB,EAAA,SAAW,WAEV,UAACoB,EAAA,EAAM,CAACJ,QAAQ,UAAUK,QAzCpC,YAEmB,IAAdZ,IAEDE,EAAIW,QAAQ,CACVC,GAAIxB,EAAMwB,GACVR,MAAOhB,EAAMgB,MACbG,MAAOnB,EAAMmB,MACbC,MAAOpB,EAAMoB,QAIjBX,GAAe,GAEbgB,YAAW,WACThB,GAAe,EACjB,GAAG,MAGJE,GAAa,IAEK,IAAdD,GACFgB,MAAM,oBAIT,EAeuD,UAAC,KAAC,SAAC,MAAW,CAACC,KAAK,QAAQ,sBANrE3B,EAAMwB,OAUjBhB,IAAe,SAACT,EAAa,CAACO,KAAMN,EAAMgB,UAKjD,E,wCCgDA,EA/GqB,SAAChB,GAGpB,OAA0BO,EAAAA,EAAAA,UAAS,IAAG,eAA/BqB,EAAK,KAAEC,EAAQ,KAChBC,EAAcC,aAAaC,QAAQ,SACzC,GAA0BzB,EAAAA,EAAAA,UAASuB,GAAY,eAAxCG,EAAK,KAAEC,EAAQ,KACtB,GAAsC3B,EAAAA,EAAAA,UAAS,GAAE,eAA1C4B,EAAW,KAAEC,EAAc,MAElCC,EAAAA,EAAAA,YAAU,WACR,IAAMb,EAAKO,aAAaC,QAAQ,SAChCM,MAAM,iEAAD,OAAkEd,IAAMe,MAAK,SAAAC,GAEhF,OAAOA,EAAIC,MACb,IACGF,MAAK,SAACG,GACLb,EAASa,GACTN,EAAeM,EAAKC,OAEtB,GACJ,GAAG,IAIH,IAAMC,GAAWC,EAAAA,EAAAA,MAmEjB,IAAMC,EAAc,CAClBlB,MAAOA,EACPmB,YAAa,EACbxB,QAhE2B,SAACjB,GAC5B,IAAMkB,EAAKO,aAAaC,QAAQ,SAEhCM,MAAM,iEAAD,OAAkEd,GAAM,CAC3EwB,OAAQ,OACRC,KAAMC,KAAKC,UAAU7C,GACrB8C,QAAS,CACP,eAAgB,sBAEjBb,MAAK,SAACC,GACP,OAAOA,EAAIC,MACb,IACGF,MAAK,SAACG,GACLb,EAAS,GAAD,eAAKD,GAAK,CAAEc,KACpBN,EAAeD,EAAc,EAE/B,GAIJ,EA6CEkB,WA3CgC,SAACC,GAEjC,IAAM9B,EAAKO,aAAaC,QAAQ,SAGhCM,MAAM,iEAAD,OAAkEd,EAAE,YAAI8B,GAAY,CACvFN,OAAQ,WACPT,MAAK,SAACC,GAGP,IAAMhB,EAAKO,aAAaC,QAAQ,SAChCM,MAAM,iEAAD,OAAkEd,IAAMe,MAAK,SAAAC,GAEhF,OAAOA,EAAIC,MACb,IACGF,MAAK,SAACG,GACLb,EAASa,GACTN,EAAeM,EAAKC,OAGtB,GAEJ,GAGF,EAmBEV,MAAOA,EACPsB,YArE0BtB,EAsE1BuB,MAnBF,SAAsBvB,GAEpBC,EAASD,EAGX,EAeEwB,OAdF,WACEvB,EAAS,MACTH,aAAasB,WAAW,SACxBT,EAAS,IACX,EAWEc,MAAOvB,GAKT,OACE,SAAC,aAAoB,CAACwB,MAAOb,EAAY,SACtC9C,EAAM4D,UAGb,EC/GaC,EAAU,WACnB,OACI,UAAC,WAAc,YACX,gBAAK3D,UAAU,KAAI,UACf,wBAAI,oBAER,eAAIA,UAAU,UAAS,SAAC,YAIpC,ECkCA,EApCc,WACV,IAWQ0B,EAXY,CAEhB,CAAEJ,GAAI,KAAMR,MAAO,SAAUI,MAAO,IAAK0C,SAAU,mEAEnD,CAAEtC,GAAI,KAAMR,MAAO,uBAAwBI,MAAO,GAAI0C,SAAU,mEAEhE,CAAEtC,GAAI,KAAMR,MAAO,wBAAyBI,MAAO,GAAI0C,SAAU,mEAEjE,CAAEtC,GAAI,KAAMR,MAAO,aAAcI,MAAO,IAAK0C,SAAU,oEAG/BC,KAAI,SAACzD,GAC7B,OACE,gBAAmBJ,UAAU,WAAU,UACrC,SAAC,EAAQ,CACPsB,GAAIwC,KAAKC,SACTjD,MAAOV,EAAKU,MACZI,MAAOd,EAAKc,MACZD,MAAOb,EAAKwD,YALNxD,EAAKkB,GAYnB,IACF,OACI,UAAC,EAAY,YACd,SAAC0C,EAAA,EAAM,KACP,SAACL,EAAO,KACP,gBAAK3D,UAAU,MAAK,SAAG0B,KACvB,SAACuC,EAAA,EAAM,MAGf,C",
  "sources": [
    "component/Secondarymodal/secondarymodal.js",
    "component/displayitems/cardbody.js",
    "store/CardContextprovider.js",
    "component/UI/heading.js",
    "component/router/pages/Home.js"
  ],
  "sourcesContent": [
    "import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nimport \"./secondarymodel.css\"\r\n\r\nexport const Secondarycard = (props) => {\r\n  return (\r\n    <Card className='secondary'>\r\n        <h4> <p style={{color:\"red\" ,fontWeight:\"500\"}}> {props.item} </p> is addded to the card</h4>\r\n    </Card>\r\n  )\r\n}\r\n",
    "import React, { useContext, useState } from 'react'\r\nimport { Card, Button } from 'react-bootstrap'\r\nimport './Cardbody.css'\r\nimport Cardcontext from '../../store/context'\r\nimport { Secondarycard } from '../Secondarymodal/secondarymodal'\r\nimport { IoAddCircle } from \"react-icons/io5\";\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nexport const Cardbody = (props) => {\r\n\r\n  const [popupstatus, setpopupstatus] = useState(false)\r\n  const [dublicate, setdublicate] = useState(false)\r\n\r\n  let ctx = useContext(Cardcontext)\r\n\r\n  function itemhandler() {\r\n\r\n   if (dublicate === false) {\r\n\r\n      ctx.addItem({\r\n        id: props.id,\r\n        title: props.title,\r\n        image: props.image,\r\n        price: props.price,\r\n      });\r\n\r\n     \r\n    setpopupstatus(true)\r\n\r\n      setTimeout(() => {\r\n        setpopupstatus(false)\r\n      }, 1000);\r\n    }\r\n\r\n     setdublicate(true)\r\n\r\n     if (dublicate === true) {\r\n       alert(\"Item Already Eist\")\r\n     }\r\n\r\n\r\n    }\r\n  \r\n\r\n\r\n\r\n  return (\r\n\r\n    <React.Fragment>\r\n      <Card className=\"card\" ><Link to={`/Home/product/${props.title}`}>Details</Link>\r\n        <div key={props.id}>\r\n          <span className=\"items\">{props.title}</span>\r\n          <Card.Img variant=\"top\" className='zoom' src={props.image} />\r\n          <h3> PRICE  ${props.price}</h3>\r\n          <Card.Footer>\r\n\r\n            <Button variant=\"success\" onClick={itemhandler}> <IoAddCircle size=\"2em\" /> Add to Cart</Button>\r\n          </Card.Footer>\r\n        </div>\r\n      </Card>\r\n      {popupstatus && <Secondarycard item={props.title} />}\r\n\r\n\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Cardbody\r\n",
    "import Cardcontext from \"./context\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst CardProvider = (props) => {\r\n\r\n\r\n  const [items, setitems] = useState([])\r\n  const intialtoken = localStorage.getItem(\"token\")\r\n  const [token, settoken] = useState(intialtoken)\r\n  const [totalnumber, settotalnumber] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const id = localStorage.getItem(\"email\")\r\n    fetch(`https://crudcrud.com/api/fe2a3201a5e34b1796caa80fcd989945/cart${id}`).then(res => {\r\n\r\n      return res.json()\r\n    })\r\n      .then((data) => {\r\n        setitems(data)\r\n        settotalnumber(data.length)\r\n\r\n      })\r\n  }, [])\r\n\r\n\r\n\r\n  const navigate = useNavigate()\r\n\r\n\r\n\r\n  const isloggedinboolean = !!token\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    const id = localStorage.getItem(\"email\")\r\n\r\n    fetch(`https://crudcrud.com/api/fe2a3201a5e34b1796caa80fcd989945/cart${id}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(item),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then((res) => {\r\n      return res.json()\r\n    })\r\n      .then((data) => {\r\n        setitems([...items, data])\r\n        settotalnumber(totalnumber + 1)\r\n\r\n      })\r\n\r\n\r\n    // setitems([...items, data])\r\n  };\r\n\r\n  const removeItemFromCartHandler = (deleteid) => {\r\n\r\n    const id = localStorage.getItem(\"email\")\r\n\r\n\r\n    fetch(`https://crudcrud.com/api/fe2a3201a5e34b1796caa80fcd989945/cart${id}/${deleteid}`, {\r\n      method: \"DELETE\"\r\n    }).then((res) => {\r\n\r\n\r\n      const id = localStorage.getItem(\"email\")\r\n      fetch(`https://crudcrud.com/api/fe2a3201a5e34b1796caa80fcd989945/cart${id}`).then(res => {\r\n\r\n        return res.json()\r\n      })\r\n        .then((data) => {\r\n          setitems(data)\r\n          settotalnumber(data.length)\r\n\r\n\r\n        })\r\n\r\n    })\r\n\r\n\r\n  };\r\n\r\n  function loginhandler(token) {\r\n\r\n    settoken(token)\r\n\r\n\r\n  }\r\n  function logouthandler() {\r\n    settoken(null)\r\n    localStorage.removeItem(\"token\")\r\n    navigate(\"/\")\r\n  }\r\n\r\n  const cartContext = {\r\n    items: items,\r\n    totalAmount: 0,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n    token: token,\r\n    isLoggein: isloggedinboolean,\r\n    login: loginhandler,\r\n    logout: logouthandler,\r\n    total: totalnumber\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <Cardcontext.Provider value={cartContext}>\r\n      {props.children}\r\n    </Cardcontext.Provider>\r\n  );\r\n};\r\n\r\nexport default CardProvider;\r\n",
    "import React from 'react'\r\n\r\nexport const Heading = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className='h1'>\r\n                <h1>The Generics</h1>\r\n            </div>\r\n            <h2 className='heading'>Merch</h2>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n",
    "\r\nimport React from \"react\";\r\n\r\nimport Cardbody from \"../../displayitems/cardbody\";\r\nimport Footer from \"../../UI/Footer\"\r\nimport Header from \"../../UI/Header\";\r\nimport CardProvider from \"../../../store/CardContextprovider\";\r\nimport { Heading } from \"../../UI/heading\";\r\n\r\n\r\n const Home = () => {\r\n    const productsArr = [\r\n\r\n        { id: \"m1\", title: 'Colors', price: 100, imageUrl: 'https://prasadyash2411.github.io/ecom-website/img/Album%201.png', },\r\n    \r\n        { id: \"m2\", title: 'Black & white Colors', price: 50, imageUrl: 'https://prasadyash2411.github.io/ecom-website/img/Album%202.png', },\r\n    \r\n        { id: \"m3\", title: 'Yellow & Black Colors', price: 70, imageUrl: 'https://prasadyash2411.github.io/ecom-website/img/Album%203.png', },\r\n    \r\n        { id: \"m4\", title: 'Blue Color', price: 100, imageUrl: 'https://prasadyash2411.github.io/ecom-website/img/Album%204.png', }\r\n    \r\n      ]\r\n      const items = productsArr.map((item) => {\r\n        return (\r\n          <div key={item.id} className=\"col-md-6\" >\r\n            <Cardbody\r\n              id={Math.random()}\r\n              title={item.title}\r\n              price={item.price}\r\n              image={item.imageUrl}\r\n            >\r\n            </Cardbody>\r\n          </div>\r\n        )\r\n    \r\n    \r\n      })\r\n    return (\r\n        <CardProvider >\r\n       <Header/>\r\n       <Heading/>\r\n        <div className=\"row\" >{items}</div>\r\n        <Footer/>\r\n      </CardProvider>\r\n  )\r\n}\r\nexport default Home"
  ],
  "names": [
    "Secondarycard",
    "props",
    "Card",
    "className",
    "style",
    "color",
    "fontWeight",
    "item",
    "useState",
    "popupstatus",
    "setpopupstatus",
    "dublicate",
    "setdublicate",
    "ctx",
    "useContext",
    "Cardcontext",
    "to",
    "title",
    "variant",
    "src",
    "image",
    "price",
    "Button",
    "onClick",
    "addItem",
    "id",
    "setTimeout",
    "alert",
    "size",
    "items",
    "setitems",
    "intialtoken",
    "localStorage",
    "getItem",
    "token",
    "settoken",
    "totalnumber",
    "settotalnumber",
    "useEffect",
    "fetch",
    "then",
    "res",
    "json",
    "data",
    "length",
    "navigate",
    "useNavigate",
    "cartContext",
    "totalAmount",
    "method",
    "body",
    "JSON",
    "stringify",
    "headers",
    "removeItem",
    "deleteid",
    "isLoggein",
    "login",
    "logout",
    "total",
    "value",
    "children",
    "Heading",
    "imageUrl",
    "map",
    "Math",
    "random",
    "Header",
    "Footer"
  ],
  "sourceRoot": ""
}
